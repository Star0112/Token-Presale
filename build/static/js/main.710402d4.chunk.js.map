{"version":3,"sources":["config/index.js","redux/auth/actions.js","redux/actions.js","main/web3.js","images/logo.png","components/Header/index.js","components/Footer/index.js","layout/index.js","main/utils.js","main/contracts.js","main/token.js","main/presale.js","components/Page/index.js","components/PageHeader/index.js","components/Form/index.js","components/Button/index.js","components/Input/index.js","components/Button/labelButton.js","components/BetCtrl/index.js","components/ConfirmModal/index.js","views/presale/index.js","App.js","redux/auth/reducer.js","redux/reducers.js","redux/auth/saga.js","redux/sagas.js","redux/store.js","reportWebVitals.js","fonts/VT323-Regular.ttf","index.js"],"names":["require","config","web3Provider","process","networkId","contractAddress","token","56","97","presale","module","exports","setAddress","address","type","SET_ADDRESS","payload","setNetworkId","SET_NETWORKID","SET_ERROR","providerUrl","web3","Web3","window","ethereum","connector","WalletConnect","bridge","qrcodeModal","QRCodeModal","Header","dispatch","useDispatch","useSelector","state","authUser","onConnectClick","a","isMobile","connected","console","log","_accounts","_chainId","toString","createSession","on","error","params","accounts","chainId","NotificationManager","warning","networkVersion","selectedAddress","request","method","Navbar","collapseOnSelect","expand","Brand","href","src","logo","style","width","height","alt","Toggle","aria-controls","Collapse","id","Nav","className","to","activeStyle","Link","Button","variant","whiteSpace","onClick","e","open","substring","length","Footer","Layout","children","customizedDate","timestamp","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getBNBBalance","eth","getBalance","bnbBalance","bnDivdedByDecimals","BigNumber","callMethod","args","call","result","sendTransaction","fromAddress","toAddress","encodedABI","successCallBack","errorCallBack","wei","getGasPrice","gasPrice","tx","from","utils","toHex","data","value","hash","receipt","err","mobileSendTransaction","then","catch","bn","decimals","dividedBy","pow","bnMultipledByDecimals","multipliedBy","tokenConrtractAddress","ITokenContract","Contract","tokenContractAbi","presaleContractAddress","IPresaleContract","presaleContractAbi","tokenContract","abi","contract","presaleContract","methods","getStartTime","getEndTime","getPresaleStatus","getPresaleCap","getPrice","getUnclimedPurchasedToken","getPurchasedToken","Page","PageHeader","title","content","Form","onClickHandler","disabled","Input","name","onChangeHandler","useState","inputValue","setInputValue","emitChange","useCallback","target","useEffect","onChange","match","LabelButton","BetCtrl","label","balance","currentVal","Row","marginTop","marginBottom","Col","xs","toFixed","sm","StyledModal","styled","Modal","ConfirmModal","setShowConfirmModal","setIsConfirmed","show","onHide","centered","Title","Body","primary","override","css","Presale","currentNetworkId","userBNBBalance","setUserBNBBalance","startTime","setStartTime","endTime","setEndTime","isOn","setIsOn","presaleAmount","setPresaleAmount","lockedAmount","setLockedAmount","purchasedToken","setPurchasedToken","price","setPrice","setValue","progress","setProgress","userBalance","setUserBalance","timerID","setTimerID","showConfirmModal","modalTitle","modalContent","isConfirmed","fetchAllDataFromContract","clearInterval","tempTimerID","setInterval","transactionDone","transactionError","onPurchase","event","purchaseAmount","purchase","encodeABI","size","color","loading","toFormat","md","App","props","handleAddressChanged","setAddressRequest","handleNetworkChanged","setNetworkIdRequest","includes","setErrorRequest","net","getId","netId","currentProvider","path","exact","Component","connect","setError","INIT_STATE","authReducer","action","reducers","combineReducers","rootSaga","all","getState","authSagas","sagaMiddleware","createSagaMiddleware","middlewares","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store","initialState","createStore","compose","applyMiddleware","run","sagas","configureStore","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.710402d4.chunk.js","sourcesContent":["require('dotenv').config();\r\n\r\nconst web3Provider = process.env.REACT_APP_NETWORK_ID === '56'\r\n  ? process.env.REACT_APP_MAIN_WEB3_PROVIDER\r\n  : process.env.REACT_APP_TEST_WEB3_PROVIDER\r\n\r\nconst config = {\r\n  web3Provider: web3Provider,\r\n  networkId: process.env.REACT_APP_NETWORK_ID,\r\n  contractAddress: {\r\n    token: {\r\n      56: '0x7B632ac6B3401C4989aE1b4978Bde62400e31eD3',\r\n      97: '0x09d8f2a374d32ad4470f3f2f2ed401a3b160065c',\r\n    },\r\n    presale: {\r\n      56: '0xAd72807Dc755FA4D17Bc95162dccee84954616d5',\r\n      97: '0x6FF39060964f9c8Fe291C8E14C2212eF9C75385e',\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = config;\r\n","import {\r\n  SET_ADDRESS,\r\n  SET_NETWORKID,\r\n  SET_ERROR,\r\n} from '../actions';\r\n\r\nexport const setAddress = (address) => ({\r\n  type: SET_ADDRESS,\r\n  payload: { address }\r\n});\r\n\r\nexport const setNetworkId = (networkId) => ({\r\n  type: SET_NETWORKID,\r\n  payload: { networkId }\r\n});\r\n\r\nexport const setError = (error) => ({\r\n  type: SET_ERROR,\r\n  payload: { error }\r\n});\r\n","/* AUTH */\r\nexport const SET_ADDRESS = \"SET_ADDRESS\";\r\nexport const SET_NETWORKID = \"SET_NETWORKID\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\n\r\nexport * from \"./auth/actions\";\r\n","import WalletConnect from \"@walletconnect/client\";\r\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\r\nimport Web3 from 'web3';\r\nimport config from '../config';\r\n\r\nconst providerUrl = config.web3Provider;\r\nconst web3 = new Web3(window.ethereum || providerUrl);\r\n\r\nconst connector = new WalletConnect({\r\n  bridge: \"https://bridge.walletconnect.org\", // Required\r\n  qrcodeModal: QRCodeModal,\r\n});\r\n\r\nexport {\r\n  Web3,\r\n  providerUrl,\r\n  web3,\r\n  connector\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.b8f4a382.png\";","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    Nav,\r\n    Navbar,\r\n    Button,\r\n} from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport config from '../../config';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { connector } from \"../../main/web3\";\r\nimport { setAddress, setNetworkId } from \"../../redux/actions\";\r\n\r\nimport logo from '../../images/logo.png';\r\nimport './header.css';\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch();\r\n    const address = useSelector(state => state.authUser.address);\r\n    // const networkId = useSelector(state => state.authUser.networkId);\r\n\r\n    const onConnectClick = async () => {\r\n        if (isMobile) {\r\n            // Check if connection is already established\r\n            if (!connector.connected) {\r\n                // create new session\r\n                connector.createSession();\r\n            } else {\r\n                console.log(connector._accounts[0]);\r\n                console.log(connector._chainId.toString(10));\r\n            }\r\n\r\n            // Subscribe to connection events\r\n            connector.on(\"connect\", (error, payload) => {\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n\r\n                // Get provided accounts and chainId\r\n                const { accounts, chainId } = payload.params[0];\r\n                dispatch(setAddress(accounts[0]));\r\n                dispatch(setNetworkId(chainId.toString(10)));\r\n            });\r\n\r\n            connector.on(\"session_update\", (error, payload) => {\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n\r\n                // Get updated accounts and chainId\r\n                // const { accounts, chainId } = payload.params[0];\r\n            });\r\n\r\n            connector.on(\"disconnect\", (error, payload) => {\r\n                if (error) {\r\n                    throw error;\r\n                }\r\n\r\n                // Delete connector\r\n            });\r\n\r\n            return;\r\n        }\r\n        if (typeof window.ethereum === 'undefined') {\r\n            NotificationManager.warning('Please install MetaMask!');\r\n            return;\r\n        }\r\n        if (window.ethereum.networkVersion !== config.networkId) {\r\n            if (config.networkId === '1')\r\n                NotificationManager.warning('Please select main net to proceed!');\r\n            else if (config.networkId === '3')\r\n                NotificationManager.warning('Please select ropsten net to proceed!');\r\n            return;\r\n        }\r\n        if (window.ethereum.selectedAddress !== null) {\r\n            NotificationManager.warning('MetaMask was already connected.');\r\n            return;\r\n        }\r\n        if (window.ethereum.selectedAddress === null) {\r\n            try {\r\n                await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            } catch (err) {\r\n                //console.log('err :>> ', err);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\">\r\n            <Navbar.Brand href=\"/\"><img src={logo} style={{ width: 50, height: 50 }} alt='TITAN Logo' /></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <NavLink className=\"menu-item\" to=\"/presale\" activeStyle={{ 'color': \"#007bff\" }}>PRESALE</NavLink>\r\n                    {/* <Nav.Link className=\"menu-item\" href=\"https://cryptoexploit.com/introducing-titan-token-your-premiere-crypto-stake-token/\" activeStyle={{ 'color': \"#007bff\" }} target='_blank' rel=\"noreferrer\">ABOUT</Nav.Link> */}\r\n                </Nav>\r\n                <Nav>\r\n                    <Nav.Link href=\"#\">\r\n                        {\r\n                            address === null ?\r\n                                (<Button variant=\"outline-warning\" style={{ whiteSpace: 'nowrap' }} onClick={() => onConnectClick()}>Wallet Connect</Button>) :\r\n                                (<Button variant=\"outline-info\"\r\n                                    onClick={e => {\r\n                                        window.open(`https://bscscan.com/address/${address}`, '_blank');\r\n                                    }}>\r\n                                    {`${address.substring(0, 7)}...${address.substring(address.length - 5, address.length)}`}\r\n                                </Button>)\r\n                        }\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './footer.css';\r\nimport telegram from '../../images/icon_telegram.png';\r\nimport twitter from '../../images/icon_twitter.png';\r\nimport discord from '../../images/icon_discord.png';\r\nimport github from '../../images/icon_github.png';\r\nimport exchange from '../../images/icon_exchange.png';\r\nimport dextool from '../../images/icon_dextool.png';\r\nimport uniswap from '../../images/icon_uniswap.png';\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <div className='footer'>\r\n            {/* <ul>\r\n                <li className=\"link-icon\" >\r\n                    <a href='https://t.me/DAOTitan' target='_blank' rel=\"noreferrer\">\r\n                        <img src={telegram} alt=\"Telegram\" className=\"icon\" />\r\n                    </a>\r\n                </li>\r\n                <li className=\"link-icon\" >\r\n                    <a href='https://twitter.com/TITAN0112' target='_blank' rel=\"noreferrer\">\r\n                        <img src={twitter} alt=\"Twitter\" className=\"icon\" />\r\n                    </a>\r\n                </li>\r\n                <li className=\"link-icon\" >\r\n                    <a href='https://discord.gg/3fFrrD3D' target='_blank' rel=\"noreferrer\">\r\n                        <img src={discord} alt=\"Discord\" className=\"icon\" />\r\n                    </a>\r\n                </li>\r\n                <li className=\"link-icon\" >\r\n                    <a href='https://github.com/TITAN-Vault/Contracts' target='_blank' rel=\"noreferrer\">\r\n                        <img src={github} alt=\"Github\" className=\"icon\" />\r\n                    </a>\r\n                </li>\r\n                <li className=\"link-icon\" >\r\n                    <a href='https://app.uniswap.org/#/swap?outputCurrency=0x983C059D1be984F8f06C2559351C5ab1CB1dcDb7' target='_blank' rel=\"noreferrer\">\r\n                        <img src={exchange} alt=\"Exchange\" className=\"icon\" />\r\n                    </a>\r\n                </li>\r\n                <li className=\"link-icon\" >\r\n                    <a href='https://www.dextools.io/app/uniswap/pair-explorer/0x06aC948b796042d8ff52792899da16d9C690E41b' target='_blank' rel=\"noreferrer\">\r\n                        <img src={dextool} alt=\"Dextools\" className=\"icon\" />\r\n                    </a>\r\n                </li>\r\n                <li className=\"link-icon\" >\r\n                    <a href='https://info.uniswap.org/token/0x983C059D1be984F8f06C2559351C5ab1CB1dcDb7' target='_blank' rel=\"noreferrer\">\r\n                        <img src={uniswap} alt=\"Uniswap\" className=\"icon\" />\r\n                    </a>\r\n                </li>\r\n            </ul> */}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport './layout.css';\r\n\r\nfunction Layout({children}) {\r\n    return (\r\n        <div className=\"layout\">\r\n            <Header/>\r\n                {children}\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;","import { web3 } from './web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nconst customizedDate = (timestamp) => {\r\n  return (`${new Date(timestamp).getFullYear()}/${new Date(timestamp).getMonth() + 1}/${new Date(timestamp).getDate()}\r\n  ${new Date(timestamp).getHours() > 9 ? new Date(timestamp).getHours() : `0${new Date(timestamp).getHours()}`}:${new Date(timestamp).getMinutes() > 9 ? new Date(timestamp).getMinutes() : `0${new Date(timestamp).getMinutes()}`}:${new Date(timestamp).getSeconds() > 9 ? new Date(timestamp).getSeconds() : `0${new Date(timestamp).getSeconds()}`}`)\r\n}\r\n\r\nconst getBNBBalance = async (address) => {\r\n  const bnbBalance = await web3.eth.getBalance(address);\r\n  return bnDivdedByDecimals(new BigNumber(bnbBalance), 18);\r\n}\r\n\r\nconst callMethod = async (method, args = []) => {\r\n  const result = await method(...args).call();\r\n  return result;\r\n}\r\n\r\nconst sendTransaction = async (fromAddress, toAddress, encodedABI, successCallBack, errorCallBack, wei = `0x0`) => {\r\n  const web3 = window.web3;\r\n  if (window.ethereum && web3) {\r\n    try {\r\n      const gasPrice = await web3.eth.getGasPrice();\r\n      const tx = {\r\n        from: fromAddress,\r\n        to: toAddress,\r\n        gasPrice: web3.utils.toHex(gasPrice), //`0xAB5D04C00`,\r\n        data: encodedABI,\r\n        value: wei\r\n      };\r\n\r\n      web3.eth.sendTransaction(tx)\r\n        .on('transactionHash', (hash) => { console.log('hash: ', hash) })\r\n        .on('receipt', (receipt) => {\r\n          successCallBack();\r\n        })\r\n        .on('error', (err) => {\r\n          errorCallBack(err)\r\n        });\r\n\r\n    } catch (err) {\r\n      return null;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mobileSendTransaction = async (fromAddress, toAddress, encodedABI, successCallBack, errorCallBack, wei = `0x0`) => {\r\n  if (web3.connected) {\r\n    try {\r\n      const tx = {\r\n        from: fromAddress,\r\n        to: toAddress,\r\n        data: encodedABI,\r\n        value: wei\r\n      };\r\n\r\n      web3.sendTransaction(tx)\r\n        .then((result) => {\r\n          successCallBack();\r\n        })\r\n        .catch((error) => {\r\n          errorCallBack();\r\n        });\r\n\r\n    } catch (err) {\r\n      console.log('err :>> ', err);\r\n      return null;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst getNetworkNonce = async (address) => {\r\n  try {\r\n    let nonce = await web3.eth.getTransactionCount(address);\r\n    const pendingTxCount = await new Promise((resolve, reject) => {\r\n      web3.currentProvider.send({\r\n        method: 'txpool_content',\r\n        params: [],\r\n        jsonrpc: '2.0',\r\n        id: new Date().getTime()\r\n      }, (error, response) => {\r\n        if (response && response.error && response.error.code) {\r\n          console.error('signTxData err:', response);\r\n        }\r\n        if (error) {\r\n          reject(error);\r\n        } else\r\n          // Even though the API call didn't error the response can still contain an error message.\r\n          if (response && response.result.pending && response.result.pending[address]) {\r\n            const txnsCount = Object.keys(response.result.pending[address]).length;\r\n            resolve(txnsCount);\r\n          }\r\n        resolve(0);\r\n      });\r\n    });\r\n    // eslint-disable-next-line no-unused-vars\r\n    nonce = new BigNumber(nonce).plus(pendingTxCount).toNumber();\r\n    return nonce;\r\n  } catch (err) {\r\n    return 0;\r\n  }\r\n}\r\n\r\nconst bnToDec = (bn, decimals = 18) => {\r\n  return bn.dividedBy(new BigNumber(10).pow(decimals)).toNumber()\r\n}\r\n\r\nconst bnDivdedByDecimals = (bn, decimals = 18) => {\r\n  return bn.dividedBy(new BigNumber(10).pow(decimals))\r\n}\r\n\r\nconst bnMultipledByDecimals = (bn, decimals = 18) => {\r\n  return bn.multipliedBy(new BigNumber(10).pow(decimals))\r\n}\r\n\r\nconst decToBn = (dec, decimals = 18) => {\r\n  return new BigNumber(dec).multipliedBy(new BigNumber(10).pow(decimals))\r\n}\r\n\r\nconst secondToDate = (seconds) => {\r\n  const days = parseInt(new BigNumber(seconds / (3600 * 24)).dp(0, 6).toNumber());\r\n\r\n  if (days !== 0) {\r\n    return days === 1 ? \"1 day\" : days + \" days\";\r\n  } else {\r\n    const hours = parseInt(new BigNumber(seconds / 3600).dp(0, 0).toNumber());\r\n\r\n    if (hours !== 0) {\r\n      return hours === 1 ? \"1 hour\" : hours + \" hours\";\r\n    } else {\r\n      const minutes = parseInt(new BigNumber(seconds / 60).dp(0, 0).toNumber());\r\n      if (minutes !== 0) {\r\n        return minutes === 1 ? \"1 minute\" : minutes + \" minutes\";\r\n      } else {\r\n        return seconds + \" seconds\";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  customizedDate,\r\n  getBNBBalance,\r\n  callMethod,\r\n  sendTransaction,\r\n  mobileSendTransaction,\r\n  getNetworkNonce,\r\n  bnToDec,\r\n  bnDivdedByDecimals,\r\n  bnMultipledByDecimals,\r\n  decToBn,\r\n  secondToDate\r\n};\r\n","/* eslint-disable quote-props */\r\n/* eslint-disable max-len */\r\nimport { web3 } from './web3';\r\nimport config from '../config';\r\n\r\nimport tokenContractAbi from './abis/tokenContract.json';\r\nimport presaleContractAbi from './abis/presaleContract.json';\r\n\r\nconst networkId = config.networkId;\r\nconst tokenConrtractAddress = config.contractAddress.token[networkId];\r\nconst ITokenContract = new web3.eth.Contract(tokenContractAbi, tokenConrtractAddress);\r\n\r\nconst presaleContractAddress = config.contractAddress.presale[networkId];\r\nconst IPresaleContract = new web3.eth.Contract(presaleContractAbi, presaleContractAddress);\r\n\r\nconst tokenContract = {\r\n  address: tokenConrtractAddress,\r\n  abi: tokenContractAbi,\r\n  contract: ITokenContract,\r\n  decimals: 9\r\n};\r\n\r\nconst presaleContract = {\r\n  address: presaleContractAddress,\r\n  abi: presaleContractAbi,\r\n  contract: IPresaleContract\r\n};\r\n\r\nexport {\r\n  networkId,\r\n  tokenContract,\r\n  presaleContract,\r\n};\r\n","import BigNumber from 'bignumber.js';\r\nimport { tokenContract } from './contracts';\r\nimport { callMethod } from './utils';\r\n\r\n// Getters\r\nexport const getBalance = async (address) => {\r\n  const result = await callMethod(tokenContract.contract.methods['balanceOf'], [address]);\r\n  return new BigNumber(result);\r\n}","import BigNumber from 'bignumber.js';\r\nimport { presaleContract } from './contracts';\r\nimport { callMethod } from './utils';\r\n\r\nimport { web3 } from './web3';\r\n\r\n// Getters\r\nexport const getStartTime = async () => {\r\n    const result = await callMethod(presaleContract.contract.methods['startTime'], []);\r\n    return result;\r\n}\r\n\r\nexport const getEndTime = async () => {\r\n    const result = await callMethod(presaleContract.contract.methods['endTime'], []);\r\n    return result;\r\n}\r\n\r\nexport const getPresaleStatus = async () => {\r\n    const result = await callMethod(presaleContract.contract.methods['presaleIsOn'], []);\r\n    return result;\r\n}\r\n\r\nexport const getPresaleCap = async () => {\r\n    const result = await callMethod(presaleContract.contract.methods['presaleCapInBNB'], []);\r\n    return new BigNumber(result);\r\n}\r\n\r\nexport const getPrice = async () => {\r\n    const result = await callMethod(presaleContract.contract.methods['salePrice'], []);\r\n    return new BigNumber(result);\r\n}\r\n\r\nexport const getUnclimedPurchasedToken = async () => {\r\n    const result = await callMethod(presaleContract.contract.methods['unclaimedPurchasedToken'], []);\r\n    return new BigNumber(result);\r\n}\r\n\r\nexport const getPurchasedToken = async (address) => {\r\n    const result = await callMethod(presaleContract.contract.methods['purchasedToken'], [address]);\r\n    return new BigNumber(result);\r\n}\r\n","import React from 'react';\r\nimport './page.css';\r\n\r\n\r\nfunction Page({ children }) {\r\n    return (\r\n        <div className=\"page\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\nimport './pageheader.css';\r\n\r\n\r\nfunction PageHeader({title, content}) {\r\n    return (\r\n        <div className=\"pageheader\">\r\n            <h2>{title}</h2>\r\n            <span className='content'>{content}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageHeader;","import React from 'react';\r\nimport './form.css';\r\n\r\n\r\nfunction Form({ title, children }) {\r\n    return (\r\n        <div className=\"form\">\r\n            <h4>{title}</h4>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './button.css';\r\n\r\n\r\nfunction Button({ children, onClickHandler, disabled }) {\r\n    return (\r\n        <>\r\n            {disabled ?\r\n                (\r\n                    <div className=\"wbutton\">\r\n                        {children}\r\n                    </div>\r\n                ) :\r\n                (\r\n                    <div className=\"ybutton\" onClick={(e) => onClickHandler(e)}>\r\n                        {children}\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Button;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport './input.css';\r\n\r\n\r\nfunction Input({ name, value, onChangeHandler }) {\r\n    const [inputValue, setInputValue] = useState('0');\r\n\r\n    const onChange = (e) => {\r\n        if (e.target.value.match(/^[0-9,.]*$/g)) {\r\n            setInputValue(e.target.value);\r\n        }\r\n    }\r\n\r\n    const emitChange = useCallback(\r\n        async () => {\r\n            let event = {\r\n                target : {\r\n                    name: name,\r\n                    value: inputValue\r\n                }\r\n            };\r\n            onChangeHandler(event);\r\n        },\r\n        [inputValue],\r\n    )\r\n\r\n    useEffect(() => {\r\n        emitChange();\r\n    }, [inputValue, emitChange]);\r\n\r\n    return (\r\n        <input type=\"text\" name={name} className=\"myinput\" value={value} onChange={(e) => onChange(e)} />\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport './button.css';\r\n\r\n\r\nfunction LabelButton({ children, onClickHandler }) {\r\n    return (\r\n        <div className=\"labelButton\"\r\n            onClick={() => onClickHandler()}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LabelButton;","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Input from '../Input';\r\nimport LabelButton from '../Button/labelButton';\r\nimport './betctrl.css';\r\n\r\n\r\nfunction BetCtrl({ label, name, balance, currentVal, onChangeHandler }) {\r\n\r\n    const onMax = (e) => {\r\n        let event = {\r\n            target: {\r\n                name: name,\r\n                value: balance\r\n            }\r\n        };\r\n        onChangeHandler(event);\r\n    }\r\n\r\n    return (\r\n        <Row style={{ marginTop: 30, marginBottom: 30 }}>\r\n            <Col xs={10}>\r\n                <span className=\"\">{label}: {balance.toFixed(4)}</span>\r\n            </Col>\r\n            <Col xs={2} className='text-right'>\r\n                <LabelButton onClickHandler={onMax}>Max</LabelButton>\r\n            </Col>\r\n            <Col sm={12} className='mt-2'>\r\n                <Input name={name} value={currentVal} onChangeHandler={onChangeHandler} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default BetCtrl;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction ConfirmModal({title, content, setShowConfirmModal, setIsConfirmed}) {\n    return (\n        <StyledModal\n            show={true}\n            onHide={() => setShowConfirmModal(false)}\n            centered\n        >\n            <Modal.Title>{title}</Modal.Title>\n            <Modal.Body>{content}</Modal.Body>\n            <Modal.Footer>\n                <Button primary=\"secondary\" onClick = {() => { setShowConfirmModal(false); setIsConfirmed(false);}}>Cancel</Button>\n                <Button primary=\"secondary\" onClick = {() => { setShowConfirmModal(false); setIsConfirmed(true);}}>Confirm</Button>\n            </Modal.Footer>\n        </StyledModal>\n    );\n}\n\nexport const StyledModal = styled(Modal)`\n    .modal-title {\n        font-size: 25px;\n        text-align: center;\n        padding-top: 10px;\n    }\n\n    .modal-dialog {\n       padding-right: 0px!important;\n    }\n\n    .modal-content {\n        height: 100% !important;\n        background-color: #0a132bbf;\n        border-radius: 1.3rem;\n        color: white;\n    }\n\n    .modal-header {\n        border-bottom: 1px solid #515356;\n    }\n\n    .modal-footer {\n        border-top: 0px solid #515356;\n        padding-top: 0px;\n        justify-content: center;\n        .btn {\n            border-radius: 10px;\n        }\n        .confirm {\n            background: #55c448;\n        }\n        .slippage-text {\n            width: 100px;\n            &::-webkit-inner-spin-button {\n                -webkit-appearance: none;\n                margin: 0;\n            }\n            &:focus {\n                outline: none;\n            }\n        }\n        .postfix {\n            margin-left: -25px;\n            margin-right: 10px;\n            color: black;\n        }\n    }\n\n    .modal-body {\n        text-align: center;\n        p {\n            font-size: 18px;\n            margin-top: 15px;\n            \n        }\n        @media only screen and (max-width: 1450px) {\n            padding: 20px 20px 10px !important;\n        }\n    }\n`;\n\nConfirmModal.propTypes = {\n    trxHash: PropTypes.any,\n    setShowEtherscanModal: PropTypes.func\n}\n\nexport default ConfirmModal;\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport BigNumber from 'bignumber.js';\r\nimport {\r\n    bnMultipledByDecimals,\r\n    bnDivdedByDecimals,\r\n    getBNBBalance,\r\n    bnToDec\r\n} from '../../main/utils';\r\nimport {\r\n    getBalance\r\n} from '../../main/token';\r\nimport {\r\n    getStartTime,\r\n    getEndTime,\r\n    getPresaleStatus,\r\n    getPresaleCap,\r\n    getPrice,\r\n    getUnclimedPurchasedToken,\r\n    getPurchasedToken,\r\n} from '../../main/presale';\r\nimport {\r\n    networkId,\r\n    presaleContract,\r\n} from '../../main/contracts';\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { NotificationManager } from 'react-notifications';\r\nimport Page from '../../components/Page';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport Form from '../../components/Form';\r\nimport Button from '../../components/Button';\r\nimport BetCtrl from '../../components/BetCtrl';\r\nimport ConfirmModal from '../../components/ConfirmModal';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { css } from \"@emotion/core\";\r\nimport ClockLoader from \"react-spinners/ClockLoader\";\r\nimport { sendTransaction, mobileSendTransaction, customizedDate } from '../../main/utils';\r\nimport { isMobile } from 'react-device-detect';\r\nimport './index.css';\r\n\r\nconst override = css`\r\n  z-index: 100;\r\n  border-color: red;\r\n`;\r\n\r\nfunction Presale() {\r\n    const address = useSelector(state => state.authUser.address);\r\n    const currentNetworkId = useSelector(state => state.authUser.networkId);\r\n\r\n    const [userBNBBalance, setUserBNBBalance] = useState(new BigNumber(0));\r\n    const [startTime, setStartTime] = useState(0);\r\n    const [endTime, setEndTime] = useState(0);\r\n    const [isOn, setIsOn] = useState(false);\r\n    const [presaleAmount, setPresaleAmount] = useState(new BigNumber(0));\r\n    const [lockedAmount, setLockedAmount] = useState(new BigNumber(0));\r\n    const [purchasedToken, setPurchasedToken] = useState(new BigNumber(0));\r\n    const [price, setPrice] = useState(new BigNumber(1));\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n    const [progress, setProgress] = useState(false);\r\n\r\n    const [userBalance, setUserBalance] = useState(new BigNumber(0));\r\n\r\n    const [timerID, setTimerID] = useState(0);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n    const [modalTitle, setModalTitle] = useState('');\r\n    const [modalContent, setModalContent] = useState('');\r\n    const [isConfirmed, setIsConfirmed] = useState(false);\r\n\r\n    let transactionType = '';\r\n\r\n    const fetchAllDataFromContract = useCallback(async () => {\r\n        setIsOn(await getPresaleStatus())\r\n        setUserBalance(await getBalance(address));\r\n        setUserBNBBalance(await getBNBBalance(address));\r\n        setLockedAmount(await getUnclimedPurchasedToken());\r\n        setPurchasedToken(await getPurchasedToken(address));\r\n    }, [address]);\r\n\r\n    useEffect(() => {\r\n        if (address) {\r\n            if (timerID > 0)\r\n                clearInterval(timerID);\r\n\r\n            let tempTimerID = setInterval(async () => {\r\n                fetchAllDataFromContract();\r\n            }, 20000);\r\n\r\n            setTimerID(tempTimerID);\r\n            fetchAllDataFromContract();\r\n        }\r\n    }, [address])\r\n\r\n    useEffect(async () => {\r\n        setStartTime(await getStartTime());\r\n        setEndTime(await getEndTime());\r\n        setPresaleAmount(await getPresaleCap());\r\n        setPrice(await getPrice());\r\n    }, []);\r\n\r\n\r\n    const onChangeHandler = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const transactionDone = () => {\r\n        setValue(0);\r\n        setProgress(false);\r\n        fetchAllDataFromContract();\r\n    }\r\n\r\n    const transactionError = (err) => {\r\n        setProgress(false);\r\n    }\r\n\r\n    const onPurchase = async (event) => {\r\n        if (address == null || progress || !value)\r\n            return;\r\n\r\n        const purchaseAmount = bnMultipledByDecimals(new BigNumber(value));\r\n\r\n        setProgress(true);\r\n\r\n        const encodedABI = presaleContract.contract.methods.purchase().encodeABI();\r\n\r\n        transactionType = 'purchase';\r\n\r\n        if (isMobile)\r\n            await mobileSendTransaction(address, presaleContract.address, encodedABI, transactionDone, transactionError, purchaseAmount.toString(10));\r\n        else\r\n            await sendTransaction(address, presaleContract.address, encodedABI, transactionDone, transactionError, purchaseAmount.toString(10));\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (isConfirmed === true) {\r\n            setIsConfirmed(false);\r\n        }\r\n    }, [isConfirmed]);\r\n\r\n    return (\r\n        <>\r\n            {progress &&\r\n                <div className=\"clockContainer\">\r\n                    <ClockLoader\r\n                        css={override}\r\n                        size={100}\r\n                        color={\"#007bff\"}\r\n                        loading={progress}\r\n                    />\r\n                </div>\r\n            }\r\n            <Page>\r\n                <PageHeader\r\n                    title='PRESALE STATS'\r\n                />\r\n                {networkId === currentNetworkId ?\r\n                    (\r\n                        <>\r\n                            <Row>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form\r\n                                        title='Presale Token'\r\n                                    >\r\n                                        <span className=\"numberSpan\">\r\n                                            {bnDivdedByDecimals(presaleAmount.multipliedBy(price)).toFormat(0)} MUSK ({bnDivdedByDecimals(presaleAmount).toFormat(2)}BNB)\r\n                                        </span>\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form\r\n                                        title='Your Locked Token'\r\n                                    >\r\n                                        <span className=\"numberSpan\">\r\n                                            {bnDivdedByDecimals(purchasedToken, 9).toFormat(0)} MUSK ({bnDivdedByDecimals(purchasedToken.dividedBy(price), 9).toFormat(4)}BNB)\r\n                                        </span>\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form\r\n                                        title='Round Time'\r\n                                    >\r\n                                        <span className=\"numberSpan\">\r\n                                            {customizedDate(startTime * 1000)} {\" ~ \"} {customizedDate(endTime * 1000)}\r\n                                        </span>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form\r\n                                        title='Total Locked Token'\r\n                                    >\r\n                                        <span className=\"numberSpan\">{bnDivdedByDecimals(lockedAmount, 9).toFormat(0)} MUSK ({bnDivdedByDecimals(lockedAmount.dividedBy(price), 9).toFormat(4)}BNB)</span>\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form\r\n                                        title='Your MUSK Balance'\r\n                                    >\r\n                                        <span className=\"numberSpan\">{bnDivdedByDecimals(userBalance, 9).toFormat(0)} MUSK</span>\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col xs={12} sm={4}>\r\n                                    <Form\r\n                                        title='MUSK Price'\r\n                                    >\r\n                                        <span className=\"numberSpan\">1BNB = {price.toFormat(0)} MUSK</span>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <PageHeader\r\n                                title='MUSK-BNB BUY'\r\n                            />\r\n\r\n                            <Row>\r\n                                <Col xs={0} md={3} />\r\n                                <Col xs={12} md={6} style={{ \"lineHeight\": \"1.3\" }}>\r\n                                    <Form\r\n                                        title={'BUY MUSK'}\r\n                                    >\r\n                                        <Row className=\"vaultDiv\">\r\n                                            <Col xs={12}>\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <BetCtrl\r\n                                                            label='My BNB Balance'\r\n                                                            name='stakeAmount'\r\n                                                            balance={userBNBBalance}\r\n                                                            currentVal={value}\r\n                                                            onChangeHandler={onChangeHandler}\r\n                                                        />\r\n                                                    </Col>\r\n                                                    <Col md={12}>\r\n                                                        <Button\r\n                                                            onClickHandler={onPurchase}\r\n                                                            disabled={!isOn}\r\n                                                        >\r\n                                                            BUY\r\n                                                        </Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col xs={0} md={3} />\r\n                            </Row>\r\n                        </>\r\n                    ) :\r\n                    (\r\n                        <>\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <Form\r\n                                        title='Warning'\r\n                                    >\r\n                                        <Row>\r\n                                            <Col xs={12} className='pt-3'>\r\n                                                <span>Unable to connect wallet</span><br />\r\n                                                <span>Please change your MetaMask to access the {networkId === '56' ? 'Test' : 'Main'} BSC Network.</span>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )\r\n                }\r\n                {\r\n                    showConfirmModal &&\r\n                    <ConfirmModal title={modalTitle} content={modalContent} setShowConfirmModal={setShowConfirmModal} setIsConfirmed={setIsConfirmed} />\r\n                }\r\n            </Page >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Presale;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { NotificationContainer } from 'react-notifications';\nimport { isMobile } from 'react-device-detect';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { setAddress, setNetworkId, setError } from \"./redux/actions\";\nimport Layout from './layout';\nimport Presale from './views/presale';\nimport { providerUrl, Web3, connector } from './main/web3';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    if (isMobile) {\n      if (connector.connected) {\n        this.props.setAddressRequest(connector._accounts[0]);\n        this.props.setNetworkIdRequest(connector._chainId.toString(10));\n      }\n    } else {\n      window.web3 = null;\n      // modern broswers\n      if (typeof window.ethereum !== \"undefined\") {\n        window.web3 = new Web3(window.ethereum);\n        window.web3.eth.net.getId((err, netId) => {\n\n          this.handleNetworkChanged(`${netId}`);\n          window.ethereum.on(\"accountsChanged\", (accounts) =>\n            this.handleAddressChanged(accounts)\n          );\n          window.ethereum.on(\"chainChanged\", (netId) =>\n            this.handleNetworkChanged(netId)\n          );\n          this.props.setAddressRequest(window.ethereum.selectedAddress);\n        });\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n      } else {\n        window.web3 = null;\n      }\n    }\n  }\n\n  handleAddressChanged = (accounts) => {\n    if (typeof window.ethereum !== \"undefined\") {\n      this.props.setAddressRequest(window.ethereum.selectedAddress);\n    }\n  };\n\n  handleNetworkChanged = (networkId) => {\n    this.props.setNetworkIdRequest(networkId);\n    switch (networkId) {\n      case \"1\":\n        if (providerUrl.includes(\"mainnet\")) {\n          this.props.setErrorRequest(false);\n        } else {\n          this.props.setErrorRequest(true);\n        }\n        break;\n      case \"3\":\n        if (providerUrl.includes(\"ropsten\")) {\n          this.props.setErrorRequest(false);\n        } else {\n          this.props.setErrorRequest(true);\n        }\n        break;\n      default:\n        this.props.setErrorRequest(true);\n    }\n  };\n\n  render() {\n    return (\n      <Router>\n        <Layout>\n          <Switch>\n            <Route path=\"/presale\" exact>\n              <Presale />\n            </Route>\n            <Redirect to=\"/presale\" />\n          </Switch>\n          <NotificationContainer />\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setAddressRequest: (address) => dispatch(setAddress(address)),\n    setNetworkIdRequest: (networkId) => dispatch(setNetworkId(networkId)),\n    setErrorRequest: (error) => dispatch(setError(error)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import {\r\n    SET_ADDRESS,\r\n    SET_NETWORKID,\r\n    SET_ERROR,\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n    error: '',\r\n    address: null,\r\n    networkId: null\r\n};\r\n\r\nconst authReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_ADDRESS:\r\n            return { ...state, address: action.payload.address };\r\n        case SET_NETWORKID:\r\n            return { ...state, networkId: action.payload.networkId };\r\n        case SET_ERROR:\r\n            return { ...state, error: action.payload.error };\r\n        default: return { ...state };\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from 'redux';\r\nimport authUser from './auth/reducer';\r\n\r\n\r\nconst reducers = combineReducers({\r\n  authUser\r\n});\r\n\r\nexport default reducers;","\r\nimport { all } from 'redux-saga/effects';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([        \r\n    ]);\r\n}","import { all } from 'redux-saga/effects';\r\nimport authSagas from './auth/saga';\r\n\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    authSagas()\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reducers from './reducers';\r\nimport sagas from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n\r\n    const store = createStore(\r\n        reducers,\r\n        initialState,\r\n        compose(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    sagaMiddleware.run(sagas);\r\n\r\n    if (module.hot) {\r\n        module.hot.accept('./reducers', () => {\r\n            const nextRootReducer = require('./reducers');\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/VT323-Regular.1d510e1c.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport './fonts/VT323-Regular.ttf'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}